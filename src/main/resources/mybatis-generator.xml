<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
	  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
	  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!-- mybatis-generator插件生成代码的配置文件 -->
<generatorConfiguration>
	<classPathEntry location="${classPathEntry.location}" />
	
	<context id="MySQLTables" targetRuntime="MyBatis3">
	
		<jdbcConnection driverClass="${jdbc.driverClass}"
			connectionURL="${jdbc.connectionURL}"
			userId="${jdbc.userId}"
			password="${jdbc.password}">
		</jdbcConnection>

		<!-- java类型处理器，默认的就这么一个处理器可以用，可以自己写，具体的请参考官方文档http://code.google.com/p/mybatis/wiki/Generator -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- 生成 Model，POJO -->
		<javaModelGenerator targetPackage="com.hybris.integration.model" targetProject="${model.target.dir}">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator> 

		<!-- 生成映射文件*.xml -->
		<sqlMapGenerator targetPackage="mappers" targetProject="${mappers.target.dir}">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		 
		<!-- 生成映射器类 -->
		<javaClientGenerator type="XMLMAPPER" targetPackage="com.hybris.integration.dao" targetProject="${client.target.dir}">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- 指定要生成的表名和对应形成的POJO类名  -->
		<!--<table schema="sys_info" tableName="jdp_tb_trade" domainObjectName="JdpTbTrade"-->
			   <!--enableCountByExample="false" enableUpdateByExample="false"-->
			   <!--enableDeleteByExample="false" enableSelectByExample="false"-->
			   <!--selectByExampleQueryId="false"/>-->
		<!--<table schema="sys_info" tableName="jdp_tb_refund" domainObjectName="JdpTbRefund"-->
			   <!--enableCountByExample="false" enableUpdateByExample="false"-->
			   <!--enableDeleteByExample="false" enableSelectByExample="false"-->
			   <!--selectByExampleQueryId="false"/>-->
	</context>
</generatorConfiguration>
